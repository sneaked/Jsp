/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2014-09-02 08:00:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookert;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bookert.*;
import java.util.*;

public final class bbbobobobo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   request.setCharacterEncoding("utf-8");

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");

      BookertDBBean bookert = BookertDBBean.getInstance();
      List<BookinfoBean> booklist = new ArrayList<BookinfoBean>();

      booklist = bookert.bookSearch("", null, null);

      int index = 0;
      int maxindex = 0;
      int count = 1;

      if (request.getParameter("index") == null) {
         index = 0;
         maxindex = 9;
      } else {
         index = Integer.parseInt(request.getParameter("index"));
         maxindex = Integer.parseInt(request.getParameter("maxindex"));
      }

      for (int i = index; i <= maxindex; i++) {
         if(booklist.get(i)!=null){
   
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <table border=\"1\" width=\"800\">\r\n");
      out.write("      <tr>\r\n");
      out.write("         <td rowspan=\"4\" style=\"width: 120px;\"><img\r\n");
      out.write("            src=\"book_image/");
      out.print(booklist.get(i).getBook_num());
      out.write(".jpg\"\r\n");
      out.write("            style=\"width: 120px;\"></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <td>제목: ");
      out.print(booklist.get(i).getName());
      out.write("</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <td>저자: ");
      out.print(booklist.get(i).getAuthor());
      out.write(" 출판사: ");
      out.print(booklist.get(i).getMaker());
      out.write("</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <td>정가: ");
      out.print(booklist.get(i).getPrice());
      out.write("</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("   ");
}else{
	   break;
   	 }
   }//end for
   
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <br>\r\n");
      out.write("   <br>\r\n");
      out.write("\r\n");
      out.write("   ");

      for (int i = 0; i < booklist.size(); i += 10) {
   
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <a href=\"book_shop.jsp?index=");
      out.print(i);
      out.write("&maxindex=");
      out.print(i + 9);
      out.write('"');
      out.write('>');
      out.print(count);
      out.write("</a>|\r\n");
      out.write("   ");

      count++;
   	}
   
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
